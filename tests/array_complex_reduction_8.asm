# A compiled version of array_complex_reduction_8.c that has not yet gone through the register allocator.

.data

.text
jal main

.text
a:
addu $fp,$sp,$zero
addi $sp,$sp,-192
addi v20,$fp,-60
li v21,0
li v22,4
mul v23,v22,v21
addu v23,v20,v23
li v24,4
sw v24,0(v23)
addi v25,$fp,-60
li v26,1
li v27,4
mul v28,v27,v26
addu v28,v25,v28
li v29,32
sw v29,0(v28)
addi v30,$fp,-60
li v31,2
li v32,4
mul v33,v32,v31
addu v33,v30,v33
li v34,247
sw v34,0(v33)
addi v35,$fp,-60
li v36,3
li v37,4
mul v38,v37,v36
addu v38,v35,v38
li v39,212
sw v39,0(v38)
addi v40,$fp,-60
li v41,4
li v42,4
mul v43,v42,v41
addu v43,v40,v43
li v44,5
sw v44,0(v43)
addi v45,$fp,-60
li v46,5
li v47,4
mul v48,v47,v46
addu v48,v45,v48
li v49,35
sw v49,0(v48)
addi v50,$fp,-60
li v51,6
li v52,4
mul v53,v52,v51
addu v53,v50,v53
li v54,6
sw v54,0(v53)
addi v55,$fp,-60
li v56,7
li v57,4
mul v58,v57,v56
addu v58,v55,v58
li v59,1
sw v59,0(v58)
addi v60,$fp,-60
li v61,8
li v62,4
mul v63,v62,v61
addu v63,v60,v63
li v64,134
sw v64,0(v63)
addi v65,$fp,-60
li v66,9
li v67,4
mul v68,v67,v66
addu v68,v65,v68
li v69,87
sw v69,0(v68)
addi v70,$fp,-60
li v71,10
li v72,4
mul v73,v72,v71
addu v73,v70,v73
li v74,149
sw v74,0(v73)
addi v75,$fp,-60
li v76,11
li v77,4
mul v78,v77,v76
addu v78,v75,v78
li v79,42
sw v79,0(v78)
addi v80,$fp,-60
li v81,12
li v82,4
mul v83,v82,v81
addu v83,v80,v83
li v84,27
sw v84,0(v83)
addi v85,$fp,-60
li v86,13
li v87,4
mul v88,v87,v86
addu v88,v85,v88
li v89,15
sw v89,0(v88)
addi v90,$fp,-60
li v91,14
li v92,4
mul v93,v92,v91
addu v93,v90,v93
li v94,4
sw v94,0(v93)
li v95,4
addi v0,v95,0
li v96,32
addi v1,v96,0
li v97,247
addi v2,v97,0
li v98,212
addi v3,v98,0
li v99,5
addi v4,v99,0
li v100,35
addi v5,v100,0
li v101,6
addi v6,v101,0
li v102,1
addi v7,v102,0
li v103,134
addi v8,v103,0
li v104,0
addi v9,v104,0
label_2_while_start:
li v106,13
slt v105,v9,v106
beqz v105,label_3_while_end
addi v107,$fp,-112
li v108,4
mul v109,v108,v9
addu v109,v107,v109
addi v111,$fp,-60
li v113,4
mul v112,v9,v113
addu v114,v111,v112
lw v110,0(v114)
sw v110,0(v109)
li v116,1
addu v115,v9,v116
addi v9,v115,0
b label_2_while_start
label_3_while_end:
li v118,4
li v119,4
addu v117,v118,v119
addi v10,v117,0
li v121,32
li v122,32
addu v120,v121,v122
addi v11,v120,0
li v124,247
li v125,247
sub v123,v124,v125
addi v12,v123,0
li v126,0
addi v13,v126,0
li v127,0
addi v14,v127,0
label_4_while_start:
li v129,248
slt v128,v13,v129
beqz v128,label_5_while_end
li v131,158
slt v130,v13,v131
beqz v130,label_6_true_end
li v133,0
li v135,0
addi v139,$fp,-60
li v141,15
div v13,v141
mflo v140
li v143,4
mul v142,v140,v143
addu v144,v139,v142
lw v138,0(v144)
li v145,4
sub v137,v138,v145
addi v148,$fp,-60
li v150,15
div v13,v150
mfhi v149
li v152,4
mul v151,v149,v152
addu v153,v148,v151
lw v147,0(v153)
li v154,3
addu v146,v147,v154
sub v136,v137,v146
sub v134,v135,v136
sub v132,v133,v134
addi v15,v132,0
b label_7_if_end
label_6_true_end:
li v158,158
sub v157,v13,v158
li v159,3
div v157,v159
mflo v156
li v160,15
slt v155,v156,v160
beqz v155,label_8_true_end
addi v162,$fp,-60
li v165,158
sub v164,v13,v165
li v166,3
div v164,v166
mflo v163
li v168,4
mul v167,v163,v168
addu v169,v162,v167
lw v161,0(v169)
addi v16,v161,0
b label_9_if_end
label_8_true_end:
addi v171,$fp,-60
li v175,158
sub v174,v13,v175
li v176,3
div v174,v176
mflo v173
li v177,15
sub v172,v173,v177
li v179,4
mul v178,v172,v179
addu v180,v171,v178
lw v170,0(v180)
addi v16,v170,0
label_9_if_end:
li v184,158
sub v183,v13,v184
li v185,3
div v183,v185
mflo v182
li v186,9
slt v181,v182,v186
beqz v181,label_10_true_end
li v190,158
sub v189,v13,v190
li v191,3
div v189,v191
mflo v188
li v192,0
xor v187,v188,v192
sltiu v187,v187,1
beqz v187,label_12_true_end
addi v17,v0,0
b label_13_if_end
label_12_true_end:
li v196,158
sub v195,v13,v196
li v197,3
div v195,v197
mflo v194
li v198,1
xor v193,v194,v198
sltiu v193,v193,1
beqz v193,label_14_true_end
addi v17,v1,0
b label_15_if_end
label_14_true_end:
li v202,158
sub v201,v13,v202
li v203,3
div v201,v203
mflo v200
li v204,2
xor v199,v200,v204
sltiu v199,v199,1
beqz v199,label_16_true_end
addi v17,v2,0
b label_17_if_end
label_16_true_end:
li v208,158
sub v207,v13,v208
li v209,3
div v207,v209
mflo v206
li v210,3
xor v205,v206,v210
sltiu v205,v205,1
beqz v205,label_18_true_end
addi v17,v3,0
b label_19_if_end
label_18_true_end:
li v214,158
sub v213,v13,v214
li v215,3
div v213,v215
mflo v212
li v216,4
xor v211,v212,v216
sltiu v211,v211,1
beqz v211,label_20_true_end
addi v17,v4,0
b label_21_if_end
label_20_true_end:
li v220,158
sub v219,v13,v220
li v221,3
div v219,v221
mflo v218
li v222,5
xor v217,v218,v222
sltiu v217,v217,1
beqz v217,label_22_true_end
addi v17,v5,0
b label_23_if_end
label_22_true_end:
li v226,158
sub v225,v13,v226
li v227,3
div v225,v227
mflo v224
li v228,6
xor v223,v224,v228
sltiu v223,v223,1
beqz v223,label_24_true_end
addi v17,v6,0
b label_25_if_end
label_24_true_end:
li v232,158
sub v231,v13,v232
li v233,3
div v231,v233
mflo v230
li v234,7
xor v229,v230,v234
sltiu v229,v229,1
beqz v229,label_26_true_end
addi v17,v7,0
b label_27_if_end
label_26_true_end:
addi v17,v8,0
label_27_if_end:
label_25_if_end:
label_23_if_end:
label_21_if_end:
label_19_if_end:
label_17_if_end:
label_15_if_end:
label_13_if_end:
addi v18,v17,0
b label_11_if_end
label_10_true_end:
addi v236,$fp,-60
li v241,158
sub v240,v13,v241
li v242,3
div v240,v242
mflo v239
li v243,9
sub v238,v239,v243
li v244,15
div v238,v244
mfhi v237
li v246,4
mul v245,v237,v246
addu v247,v236,v245
lw v235,0(v247)
addi v18,v235,0
label_11_if_end:
li v251,158
sub v250,v13,v251
li v252,3
div v250,v252
mfhi v249
li v253,0
xor v248,v249,v253
sltiu v248,v248,1
beqz v248,label_28_true_end
addi v19,v10,0
b label_29_if_end
label_28_true_end:
li v257,158
sub v256,v13,v257
li v258,3
div v256,v258
mfhi v255
li v259,1
xor v254,v255,v259
sltiu v254,v254,1
beqz v254,label_30_true_end
addi v19,v11,0
b label_31_if_end
label_30_true_end:
addi v19,v12,0
label_31_if_end:
label_29_if_end:
addi v265,$fp,-60
li v269,158
sub v268,v13,v269
li v270,3
div v268,v270
mflo v267
li v271,15
div v267,v271
mflo v266
li v273,4
mul v272,v266,v273
addu v274,v265,v272
lw v264,0(v274)
addi v276,$fp,-60
li v280,158
sub v279,v13,v280
li v281,3
div v279,v281
mflo v278
li v282,15
div v278,v282
mfhi v277
li v284,4
mul v283,v277,v284
addu v285,v276,v283
lw v275,0(v285)
mul v263,v264,v275
addu v262,v16,v263
addu v261,v262,v18
sub v260,v261,v19
addi v15,v260,0
label_7_if_end:
addu v286,v15,v14
addi v14,v286,0
li v288,1
addu v287,v13,v288
addi v13,v287,0
b label_4_while_start
label_5_while_end:
sw v14,0($fp)
jr $ra
addi $sp,$fp,0
jr $ra

.text
.globl main
main:
addu $fp,$sp,$zero
addi $sp,$sp,-4
pushRegisters
addi $sp,$sp,-4
sw $ra,0($sp)
addi $sp,$sp,-4
sw $fp,0($sp)
addi $sp,$sp,-4
jal a
addu $sp,$fp,$zero
lw $fp,4($sp)
lw v289,0($sp)
sw v289,-4($fp)
addi $sp,$sp,4
lw $fp,0($sp)
addi $sp,$sp,4
lw $ra,0($sp)
addi $sp,$sp,4
popRegisters
lw v290,-4($fp)
addi $sp,$sp,-4
sw $v0,0($sp)
addi $sp,$sp,-4
sw $a0,0($sp)
li $v0,1
addu $a0,v290,$zero
syscall
lw $v0,0($sp)
lw $a0,4($sp)
addi $sp,$sp,8
addi $sp,$fp,0
li $v0,10
syscall
